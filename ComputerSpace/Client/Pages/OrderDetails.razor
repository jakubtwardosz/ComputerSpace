@page "/orders/{orderId:int}"
@inject IOrderService OrderService



<MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
    <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Order Details</MudText>

    <MudGrid Spacing="6" Class="mt-16">
        <MudItem xs="12">
            @if(order == null)
            {
                <span>Loading order...</span>
            }
            else
            {
                <h3>Order from @order.OrderDate</h3>

                <div>
                    @foreach (var product in order.Products)
                    {
                       <div class="container">
                           <div class="image-wrapper">
                               <img src="@product.ImageUrl" class="image" />
                           </div>
                           <div class="name">
                               <h5><a href="/product/@product.ProductId">@product.Title</a></h5>
                               <span>@product.ProductType</span><br/>
                               <span>Quantity: @product.Quantity</span>
                           </div>

                           <div class="product-price">@product.TotalPrice zł</div>
                       </div>
                    }

                    <div class="product-price">
                        Total: @order.TotalPrice zł
                    </div>
                </div>
            }
        </MudItem>
    </MudGrid>
</MudContainer>


@code {
    [Parameter]
    public int OrderId { get; set; }

    OrderDetailsResponse order = null;

    protected override async Task OnInitializedAsync()
    {
        order = await OrderService.GetOrderDetails(OrderId);
    }


}
