@page "/admin/categories"
@inject ICategoryService CategoryService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<div class="container">

    <div class="col-12">
        <div class="mb-4">
            <h2 class="mb-0">Categories</h2>
        </div>
    </div>
    <div class="col-12 mb-5">
        <div class="row mb-3">
            <div class="col"><strong>Name</strong></div>
            <div class="col"><strong>Url</strong></div>
            <div class="col"><strong>Visible</strong></div>
            <div class="col">&nbsp;</div>
        </div>

        @foreach (var category in CategoryService.AdminCategories)
        {
            @if (category.Editing)
            {
                <EditForm Model="editingCategory" OnSubmit="UpdateCategory">
                    <div class="row mb-2">
                        <div class="col">
                            <InputText class="form-control" @bind-Value="editingCategory.Name"></InputText>
                        </div>
                        <div class="col">
                            <InputText class="form-control" @bind-Value="editingCategory.Url"></InputText>
                        </div>
                        <div class="col">
                            <InputCheckbox class="form-check-input" @bind-Value="editingCategory.Visible"></InputCheckbox>
                        </div>
                        <div class="col">
                            <button type="submit" class="btn btn-primary btn-sm">
                                <i class="bi bi-check-lg"></i>
                            </button>
                            <button class="btn btn-primary btn-sm" @onclick="CancelEditing">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>
                    </div>
                </EditForm>
            }
            else
            {
                <div class="row mb-2">
                    <div class="col">
                        @category.Name
                    </div>
                    <div class="col">
                        @category.Url
                    </div>
                    <div class="col">
                        <span>@(category.Visible ? "Yes" : "No")</span>
                    </div>
                    <div class="col">
                        <button class="btn btn-primary btn-sm" @onclick="(() => EditCategory(category))">
                            <i class="bi bi-pencil"></i>
                        </button>
                        <button class="btn btn-primary btn-sm" @onclick="(() => DeleteCategory(category.Id))">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            }
        }
        <button class="btn btn-primary" @onclick="CreateNewCategory">
            <i class="bi bi-plus-lg"></i> Add new category
        </button>
    </div>
</div>

@code {
    Category editingCategory = null;

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetAdminCategories();
        CategoryService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChange -= StateHasChanged;
    }

    private void CreateNewCategory()
    {
        editingCategory = CategoryService.CreateNewCategory();
    }

    private void EditCategory(Category category)
    {
        category.Editing = true;
        editingCategory = category;
    }

    private async Task UpdateCategory()
    {
        if (editingCategory.IsNew)
            await CategoryService.AddCategory(editingCategory);
        else
            await CategoryService.UpdateCategory(editingCategory);
        editingCategory = new Category();
    }

    private async Task CancelEditing()
    {
        editingCategory = new Category();
        await CategoryService.GetAdminCategories();
    }

    private async Task DeleteCategory(int id)
    {
        await CategoryService.DeleteCategory(id);
    }
}