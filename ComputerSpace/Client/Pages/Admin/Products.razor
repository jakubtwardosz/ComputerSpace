@page "/admin/products"
@inject IProductService ProductService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "Admin")]

<div class="container">

    <div class="col-12">
        <div class="mb-4">
            <h2 class="mb-0">Products</h2>
        </div>
    </div>
    <div class="col-12 mb-5">
        @if (ProductService.AdminProducts == null)
        {
            <p>Loading Products...</p>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-sm table-bordered align-middle caption-top">
                    <caption>
                        <button class="btn btn-primary btn-sm" @onclick="CreateProduct">
                            <i class="bi bi-plus-lg"></i> Add new product
                        </button>
                    </caption>
                    <thead class="table-light">
                        <tr>
                            <th scope="col">&nbsp;</th>
                            <th scope="col">Product</th>
                            <th scope="col">Variant</th>
                            <th scope="col">Price</th>
                            <th scope="col">Visible</th>
                            <th scope="col">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        <Virtualize Items="ProductService.AdminProducts" Context="product">
                            <tr>
                                <td>
                                    @if (!string.IsNullOrEmpty(product.ImageUrl))
                                    {
                                        <img class="products-image" src="@product.ImageUrl" />
                                    }
                                    else if (product.Images.Count > 0)
                                    {
                                        <img class="products-image" src="@product.Images[0].Data" />
                                    }
                                </td>
                                <td>@product.Title</td>
                                <td>
                                    @foreach (var variant in product.Variants)
                                    {
                                        <p class="mb-0">@variant.ProductType.Name</p>
                                    }
                                </td>
                                <td>
                                    @foreach (var variant in product.Variants)
                                    {
                                        <p class="mb-0">@variant.Price</p>
                                    }
                                </td>
                                <td>@(product.Visible ? "Yes" : "No")</td>
                                <td>
                                    <button class="btn btn-primary btn-sm" @onclick="(() => EditProduct(product.Id))">
                                        <i class="bi bi-pencil"></i>
                                    </button>
                                </td>
                            </tr>
                        </Virtualize>
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        await ProductService.GetAdminProducts();
    }

    void EditProduct(int productId)
    {
        NavigationManager.NavigateTo($"admin/product/{productId}");
    }

    void CreateProduct()
    {
        NavigationManager.NavigateTo("admin/product");
    }
}