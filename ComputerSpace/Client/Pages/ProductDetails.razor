@page "/product/{id:int}"
@inject IProductService ProductService
@inject ICartService CartService

<div class="container">
    <div class="row">
        @if (product == null)
        {
            <span>@message</span>
        }
        else
        {
            <div class="col-md-6">
                @if (!string.IsNullOrEmpty(product.ImageUrl))
                {
                    <img class="img-fluid" src="@product.ImageUrl" alt="@product.Title" />
                }
                else
                {
                    <span>Image slider</span>
                }
            </div>
            <div class="col-md-6">
                <div class="ps-lg-10 mt-6 mt-md-0">
                     <h1 class="mb-1">@product.Title</h1>
                    <div class="mb-4">
                        <small class="text-warning">
                            <i class="bi bi-star-fill"></i>
                            <i class="bi bi-star-fill"></i>
                            <i class="bi bi-star-fill"></i>
                            <i class="bi bi-star-fill"></i>
                            <i class="bi bi-star-half"></i>
                        </small><a href="#" class="ms-2">(30 reviews)</a>
                    </div>
                    <div class="fs-4">
                        @if (GetSelectedVariant() != null)
                        {
                            @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                            {
                                <span class="fw-bold text-dark">
                                    $@GetSelectedVariant().OriginalPrice
                                </span>
                            }
                            <span class="text-decoration-line-through text-muted">
                                $@GetSelectedVariant().Price
                            </span>
                            <small class="fs-6 ms-2 text-danger">
                                26%
                                Off
                            </small>
                        }
                    </div>
                    <hr class="my-6">
                    @if (product.Variants != null && product.Variants.Count > 1)
                    {
                        <div class="mb-3">
                            <select class="form-select" @bind="currentTypeId">
                                @foreach (var variant in product.Variants)
                                {
                                    <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                                }
                            </select>
                        </div>
                    }

                    <div class="mt-3 row justify-content-start g-2 align-items-center">

                        <div class="col-xxl-4 col-lg-4 col-md-5 col-5 d-grid">
                            <button @onclick="AddToCart" type="button" class="btn btn-primary">
                                <i class="feather-icon icon-shopping-bag me-2"></i>Add to
                                cart
                            </button>
                        </div>
                        <div class="col-md-4 col-4">
                            <a class="btn btn-light " href="shop-wishlist.html" data-bs-toggle="tooltip" data-bs-html="true" aria-label="Wishlist"><i class="feather-icon icon-heart"></i></a>
                        </div>
                    </div>
                    <hr class="my-6">
                    <div class="mb-5">
                        <p class="mb-0">@product.Description</p>


                    </div>
                </div>
            </div>
        }
    </div>    
</div>

@code {
    private Product? product = null;
    private string message = string.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";

        var result = await ProductService.GetProduct(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();
        var cartItem = new CartItem
            {
                ProductId = productVariant.ProductId,
                ProductTypeId = productVariant.ProductTypeId
            };

        await CartService.AddToCart(cartItem);
    }
}