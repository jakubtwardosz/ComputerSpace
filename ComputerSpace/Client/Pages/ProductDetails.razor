@page "/product/{id:int}"
@inject IProductService ProductService
@inject ICartService CartService

<div class="container">
    <div class="row">
        @if (product == null)
        {
            <span>@message</span>
        }
        else
        {
            <div class="col-md-6">
                @if (!string.IsNullOrEmpty(product.ImageUrl))
                {
                    <img class="img-fluid" src="@product.ImageUrl" alt="@product.Title" />
                }
                else
                {
                    <span>Image slider</span>
                }
            </div>
            <div class="col-md-6 my-lg-auto">
                    <h3 class="mb-1">@product.Title</h3>

                    <div class="fs-5 mb-3">
                        @if (GetSelectedVariant() != null)
                        {
                            @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                            {
                                <span class="text-muted">
                                    $@GetSelectedVariant().OriginalPrice
                                </span>
                                <span class="text-decoration-line-through text-muted">
                                    $@GetSelectedVariant().Price
                                </span>
                            }
                            else
                            {
                                <p class="text-muted">
                                    $@GetSelectedVariant().Price
                                </p>
                            }
                        }
                    </div>
                    @if (product.Variants != null && product.Variants.Count > 1)
                    {
                        <div class="mb-3">
                            <select class="form-select" @bind="currentTypeId">
                                @foreach (var variant in product.Variants)
                                {
                                    <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                                }
                            </select>
                        </div>
                    }
                    <div>
                        <p>@product.Description</p>
                    </div>

                    <button @onclick="AddToCart" type="button" class="btn btn-primary">Add to cart</button>
            </div>
        }
    </div>    
</div>

@code {
    private Product? product = null;
    private string message = string.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";

        var result = await ProductService.GetProduct(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();
        var cartItem = new CartItem
            {
                ProductId = productVariant.ProductId,
                ProductTypeId = productVariant.ProductTypeId
            };

        await CartService.AddToCart(cartItem);
    }
}