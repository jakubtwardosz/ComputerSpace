@page "/product/{id:int}"
@inject IProductService ProductService
@inject ICartService CartService

<MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
    <MudGrid Class="mt-16">
        <MudItem>
            @if (product == null)
            {
                <MudText>@message</MudText>
            }
            else
            {
                <MudGrid>
                    <MudItem xs="12" sm="6">
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <MudImage Fluid="true" Src="@product.ImageUrl" Alt="@product.Title" />
                        }
                        else
                        {
                            <MudCarousel Class="mud-width-full" ItemsSource="@product.Images" Style="height: 200px;">
                                <ItemTemplate>
                                    <MudImage Src="@context.Data"></MudImage>>
                                </ItemTemplate>
                            </MudCarousel>
                        }
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudText Typo="Typo.h6">@product.Title</MudText>
                        <MudText>@product.Description</MudText>
                        @if (product.Variants != null && product.Variants.Count > 1)
                        {
                            <MudGrid>
                                <MudItem xs="12" Class="my-2">
                                    <select style="width:100%" @bind="currentTypeId">
                                        @foreach (var variant in product.Variants)
                                        {
                                            <option value="@variant.ProductTypeId">@variant.ProductType.Name</option>
                                        }
                                     </select>
                                </MudItem>                                
                            </MudGrid>
                        }
                        @if (GetSelectedVariant() != null)
                        {
                            @if (GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
                            {
                                <MudText Style="text-decoration: line-through">
                                    $@GetSelectedVariant().OriginalPrice
                                </MudText>
                            }
                            <MudText Color="Color.Success">
                                $@GetSelectedVariant().Price
                            </MudText>
                        }
                        <MudButton @onclick="AddToCart" Variant="Variant.Filled" DisableElevation="true" Color="Color.Success" Size="Size.Large" Class="mt-2 mb-2">Add to Cart</MudButton>
                    </MudItem>
                </MudGrid>
            }
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private Product? product = null;
    private string message = string.Empty;
    private int currentTypeId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading product...";

        var result = await ProductService.GetProduct(Id);
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            product = result.Data;
            if (product.Variants.Count > 0)
            {
                currentTypeId = product.Variants[0].ProductTypeId;
            }
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        var variant = product.Variants.FirstOrDefault(v => v.ProductTypeId == currentTypeId);
        return variant;
    }

    private async Task AddToCart()
    {
        var productVariant = GetSelectedVariant();
        var cartItem = new CartItem
            {
                ProductId = productVariant.ProductId,
                ProductTypeId = productVariant.ProductTypeId
            };

        await CartService.AddToCart(cartItem);
    }
}